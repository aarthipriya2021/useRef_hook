Hooks:
     -	Hooks are the functions which "hook into" React state and lifecycle features from        
            function  components	.
    -	React offers a number of built-in Hooks. A few of these include  useState(),    
         useEffect(),  useContext(), useReducer(),    and useRef() 

Rules:
    -   Never call Hooks from inside a loop, condition or nested function
    -   Hooks should sit at the top-level of your component
    -   Only call Hooks from React functional components
    -   Never call a Hook from a regular function
    -   Hooks can call other Hooks

useref: 
    -   useRef(initialValue) is a built-in React hook that accepts one argument 
        as the initial value and returns a reference (i.e ref). 
    -   A reference is an object having a special property.
    -   To access  direct DOM elements
    -   useRef never re-render dom elements
    -   It stores the reference of the element.
    -   values are accessed from the .current property of the returned object.
    -   The.current property could be initialised to an initial value 
        e.g. useRef(initialValue)

syntax:
    const refContainer = useRef(initialValueToBePersisted)